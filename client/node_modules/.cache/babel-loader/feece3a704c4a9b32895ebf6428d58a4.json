{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"antd\";\nimport { useState } from \"react\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  _s();\n\n  let {\n    updateTaskList,\n    data\n  } = _ref;\n  const [selectedRowKeys, setselectedRowKeys] = useState(data.filter(item => item.status === typeOfStatus.DONE).map(item => item.key)); //     const expandedRowRender = () => {\n  //     const nested_columns = [\n  //       { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n  //       { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n  //       { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n  //       { title: \"Status\", dataIndex: \"status\", key: \"status\" },\n  //       {\n  //         title: \"Action\",\n  //         dataIndex: \"operation\",\n  //         key: \"operation\",\n  //         render: () => (\n  //           <span className=\"table-operation\">\n  //             <Dropdown>\n  //               <span>Edit | Delete</span>\n  //             </Dropdown>\n  //           </span>\n  //         ),\n  //       },\n  //     ];\n  //     return (\n  //       <Table\n  //         rowSelection={{\n  //           type: ListAttributes.rowSelectionType,\n  //           hideSelectAll: true,\n  //           onSelect: (record) => {\n  //             updateTaskList(record.id);\n  //           },\n  //         }}\n  //         expandable={{\n  //       expandedRowRender: expandedRowRender2,\n  //     }}\n  //         columns={nested_columns}\n  //         dataSource={[...data]}\n  //         pagination={false}\n  //       />\n  //     );\n  //   };\n\n  const columns = [{\n    title: \"Task ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    filters: [{\n      text: typeOfStatus.IN_PROGRESS,\n      value: typeOfStatus.IN_PROGRESS\n    }, {\n      text: typeOfStatus.DONE,\n      value: typeOfStatus.DONE\n    }, {\n      text: typeOfStatus.COMPLETE,\n      value: typeOfStatus.COMPLETE\n    }],\n    onFilter: (value, record) => record.status.indexOf(value) === 0\n  }, {\n    title: \"Action\",\n    dataIndex: \"operation\",\n    key: \"operation\",\n    render: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"EDIT | DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"components-table-demo-nested\",\n      rowSelection: {\n        selectedRowKeys,\n        type: ListAttributes.rowSelectionType,\n        hideSelectAll: true,\n        onSelect: (record, _, selectedRowKeys) => {\n          updateTaskList(record.id);\n          setselectedRowKeys(selectedRowKeys);\n        }\n      },\n      columns: columns // expandable={{ expandedRowRender }}\n      ,\n      dataSource: [...data],\n      pagination: {\n        pageSize: ListAttributes.pageSize,\n        position: ListAttributes.paginationPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"9bXMA+hFBxAvL903MTbw5YT+JDA=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Table","useState","ListAttributes","typeOfStatus","List","updateTaskList","data","selectedRowKeys","setselectedRowKeys","filter","item","status","DONE","map","key","columns","title","dataIndex","filters","text","IN_PROGRESS","value","COMPLETE","onFilter","record","indexOf","render","type","rowSelectionType","hideSelectAll","onSelect","_","id","pageSize","position","paginationPosition"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx"],"sourcesContent":["import { Table } from \"antd\";\nimport { useState } from \"react\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\n\nexport default function List({ updateTaskList, data }) {\n  const [selectedRowKeys, setselectedRowKeys] = useState(data.filter(item => item.status === typeOfStatus.DONE).map(item => item.key))\n//     const expandedRowRender = () => {\n//     const nested_columns = [\n//       { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n//       { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n//       { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n//       { title: \"Status\", dataIndex: \"status\", key: \"status\" },\n//       {\n//         title: \"Action\",\n//         dataIndex: \"operation\",\n//         key: \"operation\",\n//         render: () => (\n//           <span className=\"table-operation\">\n//             <Dropdown>\n//               <span>Edit | Delete</span>\n//             </Dropdown>\n//           </span>\n//         ),\n//       },\n//     ];\n//     return (\n//       <Table\n//         rowSelection={{\n//           type: ListAttributes.rowSelectionType,\n//           hideSelectAll: true,\n//           onSelect: (record) => {\n//             updateTaskList(record.id);\n//           },\n//         }}\n//         expandable={{\n//       expandedRowRender: expandedRowRender2,\n//     }}\n//         columns={nested_columns}\n//         dataSource={[...data]}\n//         pagination={false}\n//       />\n//     );\n//   };\n\n  const columns = [\n    { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n    { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n    { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filters: [\n        {\n          text: typeOfStatus.IN_PROGRESS,\n          value: typeOfStatus.IN_PROGRESS,\n        },\n        {\n          text: typeOfStatus.DONE,\n          value: typeOfStatus.DONE,\n        },\n        {\n          text: typeOfStatus.COMPLETE,\n          value: typeOfStatus.COMPLETE,\n        },\n      ],\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"operation\",\n      key: \"operation\",\n      render: () => (\n        <span>EDIT | DELETE</span>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        rowSelection={{\n          selectedRowKeys,\n          type:  ListAttributes.rowSelectionType,\n          hideSelectAll: true,\n          onSelect: (record, _, selectedRowKeys) => {\n            updateTaskList(record.id);\n            setselectedRowKeys(selectedRowKeys);\n          },\n        }}\n        columns={columns}\n        // expandable={{ expandedRowRender }}\n        dataSource={[...data]}\n        pagination={{ pageSize:  ListAttributes.pageSize, position: ListAttributes.paginationPosition }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,eAAe,SAASC,IAAT,OAAwC;EAAA;;EAAA,IAA1B;IAAEC,cAAF;IAAkBC;EAAlB,CAA0B;EACrD,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAACK,IAAI,CAACG,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgBR,YAAY,CAACS,IAAjD,EAAuDC,GAAvD,CAA2DH,IAAI,IAAIA,IAAI,CAACI,GAAxE,CAAD,CAAtD,CADqD,CAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,SAAT;IAAoBC,SAAS,EAAE,IAA/B;IAAqCH,GAAG,EAAE;EAA1C,CADc,EAEd;IAAEE,KAAK,EAAE,MAAT;IAAiBC,SAAS,EAAE,MAA5B;IAAoCH,GAAG,EAAE;EAAzC,CAFc,EAGd;IAAEE,KAAK,EAAE,aAAT;IAAwBC,SAAS,EAAE,aAAnC;IAAkDH,GAAG,EAAE;EAAvD,CAHc,EAId;IACEE,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGEH,GAAG,EAAE,QAHP;IAIEI,OAAO,EAAE,CACP;MACEC,IAAI,EAAEhB,YAAY,CAACiB,WADrB;MAEEC,KAAK,EAAElB,YAAY,CAACiB;IAFtB,CADO,EAKP;MACED,IAAI,EAAEhB,YAAY,CAACS,IADrB;MAEES,KAAK,EAAElB,YAAY,CAACS;IAFtB,CALO,EASP;MACEO,IAAI,EAAEhB,YAAY,CAACmB,QADrB;MAEED,KAAK,EAAElB,YAAY,CAACmB;IAFtB,CATO,CAJX;IAkBEC,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACb,MAAP,CAAcc,OAAd,CAAsBJ,KAAtB,MAAiC;EAlBhE,CAJc,EAwBd;IACEL,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,WAFb;IAGEH,GAAG,EAAE,WAHP;IAIEY,MAAM,EAAE,mBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EALJ,CAxBc,CAAhB;EAiCA,oBACE;IAAA,uBACE,QAAC,KAAD;MACE,SAAS,EAAC,8BADZ;MAEE,YAAY,EAAE;QACZnB,eADY;QAEZoB,IAAI,EAAGzB,cAAc,CAAC0B,gBAFV;QAGZC,aAAa,EAAE,IAHH;QAIZC,QAAQ,EAAE,CAACN,MAAD,EAASO,CAAT,EAAYxB,eAAZ,KAAgC;UACxCF,cAAc,CAACmB,MAAM,CAACQ,EAAR,CAAd;UACAxB,kBAAkB,CAACD,eAAD,CAAlB;QACD;MAPW,CAFhB;MAWE,OAAO,EAAEQ,OAXX,CAYE;MAZF;MAaE,UAAU,EAAE,CAAC,GAAGT,IAAJ,CAbd;MAcE,UAAU,EAAE;QAAE2B,QAAQ,EAAG/B,cAAc,CAAC+B,QAA5B;QAAsCC,QAAQ,EAAEhC,cAAc,CAACiC;MAA/D;IAdd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA7FuB/B,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}