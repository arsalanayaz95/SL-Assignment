{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"antd\";\nimport { useState } from \"react\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  _s();\n\n  let {\n    updateTaskList,\n    data\n  } = _ref;\n  //     const expandedRowRender = () => {\n  //     const nested_columns = [\n  //       { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n  //       { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n  //       { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n  //       { title: \"Status\", dataIndex: \"status\", key: \"status\" },\n  //       {\n  //         title: \"Action\",\n  //         dataIndex: \"operation\",\n  //         key: \"operation\",\n  //         render: () => (\n  //           <span className=\"table-operation\">\n  //             <Dropdown>\n  //               <span>Edit | Delete</span>\n  //             </Dropdown>\n  //           </span>\n  //         ),\n  //       },\n  //     ];\n  //     return (\n  //       <Table\n  //         rowSelection={{\n  //           type: ListAttributes.rowSelectionType,\n  //           hideSelectAll: true,\n  //           onSelect: (record) => {\n  //             updateTaskList(record.id);\n  //           },\n  //         }}\n  //         expandable={{\n  //       expandedRowRender: expandedRowRender2,\n  //     }}\n  //         columns={nested_columns}\n  //         dataSource={[...data]}\n  //         pagination={false}\n  //       />\n  //     );\n  //   };\n  console.log('L', data);\n  const [selectedRowKeys, setSelectedRowKeys] = useState(data === null || data === void 0 ? void 0 : data.filter(value => value.status === typeOfStatus.DONE).map(item => item.key));\n  const columns = [{\n    title: \"Task ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    filters: [{\n      text: typeOfStatus.IN_PROGRESS,\n      value: typeOfStatus.IN_PROGRESS\n    }, {\n      text: typeOfStatus.DONE,\n      value: typeOfStatus.DONE\n    }, {\n      text: typeOfStatus.COMPLETE,\n      value: typeOfStatus.COMPLETE\n    }],\n    onFilter: (value, record) => record.status.indexOf(value) === 0\n  }, {\n    title: \"Total Dependencies\",\n    dataIndex: \"total_dependencies\",\n    key: \"total_dependencies\"\n  }, {\n    title: \"Dependencies Done\",\n    dataIndex: \"dependencies_done\",\n    key: \"dependencies_done\"\n  }, {\n    title: \"Dependencies Complete\",\n    dataIndex: \"dependencies_complete\",\n    key: \"dependencies_complete\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"operation\",\n    key: \"operation\",\n    render: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"EDIT | DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"components-table-demo-nested\",\n      rowSelection: {\n        selectedRowKeys,\n        type: ListAttributes.rowSelectionType,\n        hideSelectAll: true,\n        onChange: _selectedRowKeys => {\n          console.log(\"change\", _selectedRowKeys);\n          setSelectedRowKeys(_selectedRowKeys);\n        },\n        onSelect: record => {\n          console.log(\"select\", record);\n          updateTaskList(record);\n        }\n      },\n      columns: columns // expandable={{ expandedRowRender }}\n      ,\n      dataSource: [...data],\n      pagination: {\n        pageSize: ListAttributes.pageSize,\n        position: ListAttributes.paginationPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"GlaQqOfzdCfNxXr9BHkAQrrWQl4=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Table","useState","ListAttributes","typeOfStatus","List","updateTaskList","data","console","log","selectedRowKeys","setSelectedRowKeys","filter","value","status","DONE","map","item","key","columns","title","dataIndex","filters","text","IN_PROGRESS","COMPLETE","onFilter","record","indexOf","render","type","rowSelectionType","hideSelectAll","onChange","_selectedRowKeys","onSelect","pageSize","position","paginationPosition"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx"],"sourcesContent":["import { Table } from \"antd\";\nimport { useState } from \"react\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\n\nexport default function List({ updateTaskList, data }) {\n//     const expandedRowRender = () => {\n//     const nested_columns = [\n//       { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n//       { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n//       { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n//       { title: \"Status\", dataIndex: \"status\", key: \"status\" },\n//       {\n//         title: \"Action\",\n//         dataIndex: \"operation\",\n//         key: \"operation\",\n//         render: () => (\n//           <span className=\"table-operation\">\n//             <Dropdown>\n//               <span>Edit | Delete</span>\n//             </Dropdown>\n//           </span>\n//         ),\n//       },\n//     ];\n//     return (\n//       <Table\n//         rowSelection={{\n//           type: ListAttributes.rowSelectionType,\n//           hideSelectAll: true,\n//           onSelect: (record) => {\n//             updateTaskList(record.id);\n//           },\n//         }}\n//         expandable={{\n//       expandedRowRender: expandedRowRender2,\n//     }}\n//         columns={nested_columns}\n//         dataSource={[...data]}\n//         pagination={false}\n//       />\n//     );\n//   };\nconsole.log('L', data)  \nconst [selectedRowKeys, setSelectedRowKeys] = useState(data?.filter(value => value.status === typeOfStatus.DONE).map(item => item.key));\n  const columns = [\n    { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n    { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n    { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filters: [\n        {\n          text: typeOfStatus.IN_PROGRESS,\n          value: typeOfStatus.IN_PROGRESS,\n        },\n        {\n          text: typeOfStatus.DONE,\n          value: typeOfStatus.DONE,\n        },\n        {\n          text: typeOfStatus.COMPLETE,\n          value: typeOfStatus.COMPLETE,\n        },\n      ],\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n    },\n    { title: \"Total Dependencies\", dataIndex: \"total_dependencies\", key: \"total_dependencies\" },\n    { title: \"Dependencies Done\", dataIndex: \"dependencies_done\", key: \"dependencies_done\" },\n    { title: \"Dependencies Complete\", dataIndex: \"dependencies_complete\", key: \"dependencies_complete\" },\n    {\n      title: \"Action\",\n      dataIndex: \"operation\",\n      key: \"operation\",\n      render: () => (\n        <span>EDIT | DELETE</span>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        rowSelection={{\n          selectedRowKeys,\n          type:  ListAttributes.rowSelectionType,\n          hideSelectAll: true,\n          onChange: (_selectedRowKeys) => {\n            console.log(\"change\", _selectedRowKeys)\n            setSelectedRowKeys(_selectedRowKeys)\n          },\n          onSelect: (record) => {\n            console.log(\"select\", record)\n            updateTaskList(record);\n          }\n        }}\n        columns={columns}\n        // expandable={{ expandedRowRender }}\n        dataSource={[...data]}\n        pagination={{ pageSize:  ListAttributes.pageSize, position: ListAttributes.paginationPosition }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,eAAe,SAASC,IAAT,OAAwC;EAAA;;EAAA,IAA1B;IAAEC,cAAF;IAAkBC;EAAlB,CAA0B;EACvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,IAAjB;EACA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEK,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiBV,YAAY,CAACW,IAApD,EAA0DC,GAA1D,CAA8DC,IAAI,IAAIA,IAAI,CAACC,GAA3E,CAAD,CAAtD;EACE,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,SAAT;IAAoBC,SAAS,EAAE,IAA/B;IAAqCH,GAAG,EAAE;EAA1C,CADc,EAEd;IAAEE,KAAK,EAAE,MAAT;IAAiBC,SAAS,EAAE,MAA5B;IAAoCH,GAAG,EAAE;EAAzC,CAFc,EAGd;IAAEE,KAAK,EAAE,aAAT;IAAwBC,SAAS,EAAE,aAAnC;IAAkDH,GAAG,EAAE;EAAvD,CAHc,EAId;IACEE,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGEH,GAAG,EAAE,QAHP;IAIEI,OAAO,EAAE,CACP;MACEC,IAAI,EAAEnB,YAAY,CAACoB,WADrB;MAEEX,KAAK,EAAET,YAAY,CAACoB;IAFtB,CADO,EAKP;MACED,IAAI,EAAEnB,YAAY,CAACW,IADrB;MAEEF,KAAK,EAAET,YAAY,CAACW;IAFtB,CALO,EASP;MACEQ,IAAI,EAAEnB,YAAY,CAACqB,QADrB;MAEEZ,KAAK,EAAET,YAAY,CAACqB;IAFtB,CATO,CAJX;IAkBEC,QAAQ,EAAE,CAACb,KAAD,EAAQc,MAAR,KAAmBA,MAAM,CAACb,MAAP,CAAcc,OAAd,CAAsBf,KAAtB,MAAiC;EAlBhE,CAJc,EAwBd;IAAEO,KAAK,EAAE,oBAAT;IAA+BC,SAAS,EAAE,oBAA1C;IAAgEH,GAAG,EAAE;EAArE,CAxBc,EAyBd;IAAEE,KAAK,EAAE,mBAAT;IAA8BC,SAAS,EAAE,mBAAzC;IAA8DH,GAAG,EAAE;EAAnE,CAzBc,EA0Bd;IAAEE,KAAK,EAAE,uBAAT;IAAkCC,SAAS,EAAE,uBAA7C;IAAsEH,GAAG,EAAE;EAA3E,CA1Bc,EA2Bd;IACEE,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,WAFb;IAGEH,GAAG,EAAE,WAHP;IAIEW,MAAM,EAAE,mBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EALJ,CA3Bc,CAAhB;EAoCA,oBACE;IAAA,uBACE,QAAC,KAAD;MACE,SAAS,EAAC,8BADZ;MAEE,YAAY,EAAE;QACZnB,eADY;QAEZoB,IAAI,EAAG3B,cAAc,CAAC4B,gBAFV;QAGZC,aAAa,EAAE,IAHH;QAIZC,QAAQ,EAAGC,gBAAD,IAAsB;UAC9B1B,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsByB,gBAAtB;UACAvB,kBAAkB,CAACuB,gBAAD,CAAlB;QACD,CAPW;QAQZC,QAAQ,EAAGR,MAAD,IAAY;UACpBnB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBkB,MAAtB;UACArB,cAAc,CAACqB,MAAD,CAAd;QACD;MAXW,CAFhB;MAeE,OAAO,EAAER,OAfX,CAgBE;MAhBF;MAiBE,UAAU,EAAE,CAAC,GAAGZ,IAAJ,CAjBd;MAkBE,UAAU,EAAE;QAAE6B,QAAQ,EAAGjC,cAAc,CAACiC,QAA5B;QAAsCC,QAAQ,EAAElC,cAAc,CAACmC;MAA/D;IAlBd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GApGuBjC,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}