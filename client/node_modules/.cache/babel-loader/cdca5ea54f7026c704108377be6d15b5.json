{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { addChildToTask, getCurrentStatus, updateTaskById } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [lastId, setLastId] = useState(4);\n  const [data, setData] = useState([{\n    key: uuidv4(),\n    id: 1,\n    name: \"Start the task\",\n    status: typeOfStatus.DONE,\n    parentId: 0,\n    children: null,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }, {\n    key: uuidv4(),\n    id: 2,\n    name: \"Implement Circular Dependency Check\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    children: [{\n      key: uuidv4(),\n      id: 3,\n      name: \"Add A New Task\",\n      status: typeOfStatus.DONE,\n      parentId: 2,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    }, {\n      key: uuidv4(),\n      id: 4,\n      name: \"Edit Task Functionality\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 2,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    }],\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  let flat = new Set();\n  let checks = new Set();\n  useEffect(() => {\n    flat = new Set();\n    checks = new Set();\n    const keys = data.map(element => getCheckedTask(element))[0];\n    const tree = data.map(element => flatten(element))[0];\n    setFlatTree(Array.from(tree));\n    setSelectedRowKeys(Array.from(keys));\n  }, []);\n\n  function flatten(element) {\n    flat.add({\n      name: element.name,\n      id: element.id,\n      parentId: element.parentId\n    });\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        flatten(element.children[i]);\n      }\n    }\n\n    return flat;\n  }\n\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE) {\n      checks.add(element.key);\n    }\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n\n    return checks;\n  }\n\n  let count = 0;\n\n  function searchTaskList(element, matchingId) {\n    let status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== null) {\n      let result = null;\n\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n\n      return count;\n    }\n\n    return null;\n  }\n\n  const updateTaskList = record => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map(element => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      const dependenciesComplete = searchTaskList(element, record.id, typeOfStatus.COMPLETE);\n      const currentStatus = getCurrentStatus(element, record.id);\n\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n\n          break;\n\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(record.id, element, \"status\", typeOfStatus.IN_PROGRESS);\n          break;\n\n        default:\n          break;\n      }\n\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = _ref => {\n    let {\n      name,\n      parent\n    } = _ref;\n    const newTask = {\n      key: uuidv4(),\n      id: lastId + 1,\n      name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    };\n    setLastId(lastId + 1);\n\n    if (!parent) {\n      setData([...data, newTask]);\n    } else {\n      const dataCopy = [...data];\n      const updatedCopy = dataCopy.map(element => addChildToTask(parent, element, newTask));\n      setData([...updatedCopy]);\n    }\n\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n      visible: visible,\n      onCreate: onCreate,\n      flatTree: flatTree,\n      onCancel: () => {\n        setVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      updateTaskList: updateTaskList,\n      data: data,\n      selectedRowKeys: selectedRowKeys,\n      setSelectedRowKeys: setSelectedRowKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n31csKTUr1rJ0bTtC2VQhiWmhcM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","v4","uuidv4","typeOfStatus","List","ListForm","addChildToTask","getCurrentStatus","updateTaskById","App","visible","setVisible","lastId","setLastId","data","setData","key","id","name","status","DONE","parentId","children","total_dependencies","dependencies_done","dependencies_complete","IN_PROGRESS","selectedRowKeys","setSelectedRowKeys","flatTree","setFlatTree","flat","Set","checks","keys","map","element","getCheckedTask","tree","flatten","Array","from","add","i","length","count","searchTaskList","matchingId","result","updateTaskList","record","dataCopy","updatedCopy","dependencies","dependenciesComplete","COMPLETE","currentStatus","onCreate","parent","newTask"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport {\n  addChildToTask,\n  getCurrentStatus,\n  updateTaskById,\n} from \"./utils/helpers\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const [lastId, setLastId] = useState(4);\n  const [data, setData] = useState([\n    {\n      key: uuidv4(),\n      id: 1,\n      name: \"Start the task\",\n      status: typeOfStatus.DONE,\n      parentId: 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n    {\n      key: uuidv4(),\n      id: 2,\n      name: \"Implement Circular Dependency Check\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      children: [\n        {\n          key: uuidv4(),\n          id: 3,\n          name: \"Add A New Task\",\n          status: typeOfStatus.DONE,\n          parentId: 2,\n          children: null,\n          total_dependencies: 0,\n          dependencies_done: 0,\n          dependencies_complete: 0,\n        },\n        {\n          key: uuidv4(),\n          id: 4,\n          name: \"Edit Task Functionality\",\n          status: typeOfStatus.IN_PROGRESS,\n          parentId: 2,\n          children: null,\n          total_dependencies: 0,\n          dependencies_done: 0,\n          dependencies_complete: 0,\n        },\n      ],\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n  ]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  let flat = new Set();\n  let checks = new Set();\n\n  useEffect(() => {\n    flat = new Set();\n    checks = new Set();\n    const keys = data.map((element) => getCheckedTask(element))[0];\n    const tree = data.map((element) => flatten(element))[0];\n    setFlatTree(Array.from(tree));\n    setSelectedRowKeys(Array.from(keys));\n  }, []);\n\n  function flatten(element) {\n    flat.add({\n      name: element.name,\n      id: element.id,\n      parentId: element.parentId,\n    });\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        flatten(element.children[i]);\n      }\n    }\n    return flat;\n  }\n\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE) {\n      checks.add(element.key);\n    }\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n    return checks;\n  }\n\n  let count = 0;\n  function searchTaskList(element, matchingId, status = null) {\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== null) {\n      let result = null;\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n      return count;\n    }\n    return null;\n  }\n\n  const updateTaskList = (record) => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map((element) => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      const dependenciesComplete = searchTaskList(\n        element,\n        record.id,\n        typeOfStatus.COMPLETE\n      );\n      const currentStatus = getCurrentStatus(element, record.id);\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n          break;\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(\n            record.id,\n            element,\n            \"status\",\n            typeOfStatus.IN_PROGRESS\n          );\n          break;\n\n        default:\n          break;\n      }\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = ({ name, parent }) => {\n    const newTask = {\n      key: uuidv4(),\n      id: lastId + 1,\n      name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    };\n    setLastId(lastId + 1);\n    if (!parent) {\n      setData([...data, newTask]);\n    } else {\n      const dataCopy = [...data];\n      const updatedCopy = dataCopy.map((element) =>\n        addChildToTask(parent, element, newTask)\n      );\n      setData([...updatedCopy]);\n    }\n    setVisible(false);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add New Task\n      </Button>\n      <ListForm\n        visible={visible}\n        onCreate={onCreate}\n        flatTree={flatTree}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      <List\n        updateTaskList={updateTaskList}\n        data={data}\n        selectedRowKeys={selectedRowKeys}\n        setSelectedRowKeys={setSelectedRowKeys}\n      />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}