{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { getCurrentStatus, updateTaskById } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([{\n    key: uuidv4(),\n    id: 1,\n    name: \"Start the task\",\n    description: \"Start Working On This Task Thingy\",\n    status: typeOfStatus.DONE,\n    parentId: 0,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }, {\n    key: uuidv4(),\n    id: 2,\n    name: \"Implement Circular Dependency Check\",\n    description: \"While adding a new task and selecting parentId, check for dependency loop\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    children: [{\n      key: uuidv4(),\n      id: 3,\n      name: \"Add A New Task\",\n      description: \"Develop a popup form to add a new task to the list\",\n      status: typeOfStatus.DONE,\n      parentId: 2,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    }, {\n      key: uuidv4(),\n      id: 4,\n      name: \"Edit Task Functionality\",\n      description: \"Edit a task in-line and then save or cancel\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 2,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    }],\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  useEffect(() => {\n    const keys = data.map(element => getCheckedTask(element))[0];\n    const tree = data.map(element => flatten(element));\n    console.log(\"darakht\", tree);\n    setSelectedRowKeys(Array.from(keys));\n  }, []);\n\n  function flatten(element) {\n    let result = [];\n\n    while (element) {\n      result.push({\n        id: element.id,\n        name: element.name,\n        parentId: element.parentId\n      });\n      element = element.children;\n    }\n\n    return result;\n  }\n\n  let checks = new Set();\n\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE) {\n      checks.add(element.key);\n    }\n\n    if (element.children !== undefined) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n\n    return checks;\n  }\n\n  let count = 0;\n\n  function searchTaskList(element, matchingId) {\n    let status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== undefined) {\n      let result = null;\n\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n\n      return count;\n    }\n\n    return null;\n  }\n\n  const updateTaskList = record => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map(element => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      const dependenciesComplete = searchTaskList(element, record.id, typeOfStatus.COMPLETE);\n      const currentStatus = getCurrentStatus(element, record.id);\n\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n\n          break;\n\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(record.id, element, \"status\", typeOfStatus.IN_PROGRESS);\n          break;\n\n        default:\n          break;\n      }\n\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = _ref => {\n    let {\n      name,\n      parent\n    } = _ref;\n    const newTask = {\n      key: uuidv4(),\n      id: data.length + 1,\n      name,\n      description: name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    };\n    setData([...data, newTask]);\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n      visible: visible,\n      onCreate: onCreate,\n      data: data,\n      onCancel: () => {\n        setVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      updateTaskList: updateTaskList,\n      data: data,\n      selectedRowKeys: selectedRowKeys,\n      setSelectedRowKeys: setSelectedRowKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jDjKZBE7aj/y04ZqDoXrtGD1+rs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","v4","uuidv4","typeOfStatus","List","ListForm","getCurrentStatus","updateTaskById","App","visible","setVisible","data","setData","key","id","name","description","status","DONE","parentId","total_dependencies","dependencies_done","dependencies_complete","IN_PROGRESS","children","selectedRowKeys","setSelectedRowKeys","flatTree","setFlatTree","keys","map","element","getCheckedTask","tree","flatten","console","log","Array","from","result","push","checks","Set","add","undefined","i","length","count","searchTaskList","matchingId","updateTaskList","record","dataCopy","updatedCopy","dependencies","dependenciesComplete","COMPLETE","currentStatus","onCreate","parent","newTask"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { getCurrentStatus, updateTaskById } from \"./utils/helpers\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([\n    {\n      key: uuidv4(),\n      id: 1,\n      name: \"Start the task\",\n      description: \"Start Working On This Task Thingy\",\n      status: typeOfStatus.DONE,\n      parentId: 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n    {\n      key: uuidv4(),\n      id: 2,\n      name: \"Implement Circular Dependency Check\",\n      description:\n        \"While adding a new task and selecting parentId, check for dependency loop\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      children: [\n        {\n          key: uuidv4(),\n          id: 3,\n          name: \"Add A New Task\",\n          description: \"Develop a popup form to add a new task to the list\",\n          status: typeOfStatus.DONE,\n          parentId: 2,\n          total_dependencies: 0,\n          dependencies_done: 0,\n          dependencies_complete: 0,\n        },\n        {\n          key: uuidv4(),\n          id: 4,\n          name: \"Edit Task Functionality\",\n          description: \"Edit a task in-line and then save or cancel\",\n          status: typeOfStatus.IN_PROGRESS,\n          parentId: 2,\n          total_dependencies: 0,\n          dependencies_done: 0,\n          dependencies_complete: 0,\n        },\n      ],\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n  ]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n\n  useEffect(() => {\n    const keys = data.map((element) => getCheckedTask(element))[0];\n    const tree = data.map((element) => flatten(element));\n    console.log(\"darakht\", tree);\n    setSelectedRowKeys(Array.from(keys));\n  }, []);\n\n  function flatten(element) {\n    let result = [];\n\n    while (element) {\n      result.push({\n        id: element.id,\n        name: element.name,\n        parentId: element.parentId,\n      });\n      element = element.children;\n    }\n\n    return result;\n  }\n\n  let checks = new Set();\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE) {\n      checks.add(element.key);\n    }\n    if (element.children !== undefined) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n    return checks;\n  }\n\n  let count = 0;\n  function searchTaskList(element, matchingId, status = null) {\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== undefined) {\n      let result = null;\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n      return count;\n    }\n    return null;\n  }\n\n  const updateTaskList = (record) => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map((element) => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      const dependenciesComplete = searchTaskList(\n        element,\n        record.id,\n        typeOfStatus.COMPLETE\n      );\n      const currentStatus = getCurrentStatus(element, record.id);\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n          break;\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(\n            record.id,\n            element,\n            \"status\",\n            typeOfStatus.IN_PROGRESS\n          );\n          break;\n\n        default:\n          break;\n      }\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = ({ name, parent }) => {\n    const newTask = {\n      key: uuidv4(),\n      id: data.length + 1,\n      name,\n      description: name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    };\n    setData([...data, newTask]);\n    setVisible(false);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add New Task\n      </Button>\n      <ListForm\n        visible={visible}\n        onCreate={onCreate}\n        data={data}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      <List\n        updateTaskList={updateTaskList}\n        data={data}\n        selectedRowKeys={selectedRowKeys}\n        setSelectedRowKeys={setSelectedRowKeys}\n      />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}