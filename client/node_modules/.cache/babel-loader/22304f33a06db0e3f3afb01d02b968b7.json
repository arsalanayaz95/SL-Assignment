{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { addChildToTask, getCurrentStatus, updateTaskById } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [lastId, setLastId] = useState(5);\n  const [data, setData] = useState([]); // const [data, setData] = useState([\n  //   {\n  //     key: uuidv4(),\n  //     id: 1,\n  //     name: \"Start the task\",\n  //     status: typeOfStatus.IN_PROGRESS,\n  //     parentId: 0,\n  //     children: [\n  //       {\n  //         key: uuidv4(),\n  //         id: 5,\n  //         name: \"Start the task\",\n  //         status: typeOfStatus.IN_PROGRESS,\n  //         parentId: 0,\n  //         children: null,\n  //         total_dependencies: 0,\n  //         dependencies_done: 0,\n  //         dependencies_complete: 0,\n  //       },\n  //     ],\n  //     total_dependencies: 0,\n  //     dependencies_done: 0,\n  //     dependencies_complete: 0,\n  //   },\n  //   {\n  //     key: uuidv4(),\n  //     id: 2,\n  //     name: \"Implement Circular Dependency Check\",\n  //     status: typeOfStatus.IN_PROGRESS,\n  //     parentId: 0,\n  //     children: [\n  //       {\n  //         key: uuidv4(),\n  //         id: 3,\n  //         name: \"Add A New Task\",\n  //         status: typeOfStatus.DONE,\n  //         parentId: 2,\n  //         children: null,\n  //         total_dependencies: 0,\n  //         dependencies_done: 0,\n  //         dependencies_complete: 0,\n  //       },\n  //       {\n  //         key: uuidv4(),\n  //         id: 4,\n  //         name: \"Edit Task Functionality\",\n  //         status: typeOfStatus.IN_PROGRESS,\n  //         parentId: 2,\n  //         children: null,\n  //         total_dependencies: 0,\n  //         dependencies_done: 0,\n  //         dependencies_complete: 0,\n  //       },\n  //     ],\n  //     total_dependencies: 0,\n  //     dependencies_done: 0,\n  //     dependencies_complete: 0,\n  //   },\n  // ]);\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  let flat = new Set();\n  let checks = new Set();\n  useEffect(() => {\n    // flat = new Set();\n    // checks = new Set();\n    if (data.length > 0) {\n      const keys = data.map(element => getCheckedTask(element))[0];\n      const tree = data.map(element => flatten(element))[0];\n      setFlatTree(Array.from(tree));\n      setSelectedRowKeys(Array.from(keys));\n    }\n  }, [data]);\n\n  function flatten(element) {\n    flat.add({\n      name: element.name,\n      id: element.id,\n      parentId: element.parentId\n    });\n\n    if (element.children !== null) {\n      console.log(\"iran\");\n\n      for (let i = 0; i < element.children.length; i++) {\n        flatten(element.children[i]);\n      }\n    }\n\n    return flat;\n  }\n\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE || element.status === typeOfStatus.COMPLETE) {\n      checks.add(element.key);\n    }\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n\n    return checks;\n  }\n\n  let count = 0;\n\n  function searchTaskList(element, matchingId) {\n    let status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== null) {\n      let result = null;\n\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n\n      return count;\n    }\n\n    return null;\n  }\n\n  function searchTaskComplete(element, matchingId, status) {\n    console.log(\"elem\", element.status);\n    console.log(\"c\", count);\n\n    if (element.parentId === matchingId && element.status === status) {\n      count++;\n    }\n\n    if (element.children !== null) {\n      let result = null;\n\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskComplete(element.children[i], matchingId, status);\n      }\n\n      return count;\n    }\n\n    return null;\n  }\n\n  const updateTaskList = record => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map(element => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      count = 0;\n      const dependenciesComplete = searchTaskComplete(element, record.id, typeOfStatus.COMPLETE);\n      console.log(\"D\", dependenciesComplete);\n      const currentStatus = getCurrentStatus(element, record.id);\n\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n\n          break;\n\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(record.id, element, \"status\", typeOfStatus.IN_PROGRESS);\n          break;\n\n        default:\n          break;\n      }\n\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = _ref => {\n    let {\n      name,\n      parent\n    } = _ref;\n    const newTask = {\n      key: uuidv4(),\n      id: lastId + 1,\n      name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    };\n    setLastId(lastId + 1);\n\n    if (!parent) {\n      setData([...data, newTask]);\n    } else {\n      const dataCopy = [...data];\n      const updatedCopy = dataCopy.map(element => addChildToTask(parent, element, newTask));\n      setData([...updatedCopy]);\n    }\n\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n      visible: visible,\n      onCreate: onCreate,\n      flatTree: flatTree,\n      onCancel: () => {\n        setVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      updateTaskList: updateTaskList,\n      data: data,\n      selectedRowKeys: selectedRowKeys,\n      setSelectedRowKeys: setSelectedRowKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zbfkCbfDFvfkY6Q0/EJyR8bITAs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","v4","uuidv4","typeOfStatus","List","ListForm","addChildToTask","getCurrentStatus","updateTaskById","App","visible","setVisible","lastId","setLastId","data","setData","selectedRowKeys","setSelectedRowKeys","flatTree","setFlatTree","flat","Set","checks","length","keys","map","element","getCheckedTask","tree","flatten","Array","from","add","name","id","parentId","children","console","log","i","status","DONE","COMPLETE","key","count","searchTaskList","matchingId","result","searchTaskComplete","updateTaskList","record","dataCopy","updatedCopy","dependencies","dependenciesComplete","currentStatus","IN_PROGRESS","onCreate","parent","newTask","total_dependencies","dependencies_done","dependencies_complete"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport {\n  addChildToTask,\n  getCurrentStatus,\n  updateTaskById,\n} from \"./utils/helpers\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const [lastId, setLastId] = useState(5);\n  const [data, setData] = useState([]);\n  // const [data, setData] = useState([\n  //   {\n  //     key: uuidv4(),\n  //     id: 1,\n  //     name: \"Start the task\",\n  //     status: typeOfStatus.IN_PROGRESS,\n  //     parentId: 0,\n  //     children: [\n  //       {\n  //         key: uuidv4(),\n  //         id: 5,\n  //         name: \"Start the task\",\n  //         status: typeOfStatus.IN_PROGRESS,\n  //         parentId: 0,\n  //         children: null,\n  //         total_dependencies: 0,\n  //         dependencies_done: 0,\n  //         dependencies_complete: 0,\n  //       },\n  //     ],\n  //     total_dependencies: 0,\n  //     dependencies_done: 0,\n  //     dependencies_complete: 0,\n  //   },\n  //   {\n  //     key: uuidv4(),\n  //     id: 2,\n  //     name: \"Implement Circular Dependency Check\",\n  //     status: typeOfStatus.IN_PROGRESS,\n  //     parentId: 0,\n  //     children: [\n  //       {\n  //         key: uuidv4(),\n  //         id: 3,\n  //         name: \"Add A New Task\",\n  //         status: typeOfStatus.DONE,\n  //         parentId: 2,\n  //         children: null,\n  //         total_dependencies: 0,\n  //         dependencies_done: 0,\n  //         dependencies_complete: 0,\n  //       },\n  //       {\n  //         key: uuidv4(),\n  //         id: 4,\n  //         name: \"Edit Task Functionality\",\n  //         status: typeOfStatus.IN_PROGRESS,\n  //         parentId: 2,\n  //         children: null,\n  //         total_dependencies: 0,\n  //         dependencies_done: 0,\n  //         dependencies_complete: 0,\n  //       },\n  //     ],\n  //     total_dependencies: 0,\n  //     dependencies_done: 0,\n  //     dependencies_complete: 0,\n  //   },\n  // ]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  let flat = new Set();\n  let checks = new Set();\n\n  useEffect(() => {\n    // flat = new Set();\n    // checks = new Set();\n    if (data.length > 0) {\n      const keys = data.map((element) => getCheckedTask(element))[0];\n      const tree = data.map((element) => flatten(element))[0];\n      setFlatTree(Array.from(tree));\n      setSelectedRowKeys(Array.from(keys));\n    }\n  }, [data]);\n\n  function flatten(element) {\n    flat.add({\n      name: element.name,\n      id: element.id,\n      parentId: element.parentId,\n    });\n\n    if (element.children !== null) {\n      console.log(\"iran\");\n      for (let i = 0; i < element.children.length; i++) {\n        flatten(element.children[i]);\n      }\n    }\n    return flat;\n  }\n\n  function getCheckedTask(element) {\n    if (\n      element.status === typeOfStatus.DONE ||\n      element.status === typeOfStatus.COMPLETE\n    ) {\n      checks.add(element.key);\n    }\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n    return checks;\n  }\n\n  let count = 0;\n  function searchTaskList(element, matchingId, status = null) {\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== null) {\n      let result = null;\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n      return count;\n    }\n    return null;\n  }\n\n  function searchTaskComplete(element, matchingId, status) {\n    console.log(\"elem\", element.status);\n    console.log(\"c\", count);\n    if (element.parentId === matchingId && element.status === status) {\n      count++;\n    }\n    if (element.children !== null) {\n      let result = null;\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskComplete(element.children[i], matchingId, status);\n      }\n      return count;\n    }\n    return null;\n  }\n\n  const updateTaskList = (record) => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map((element) => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      count = 0;\n      const dependenciesComplete = searchTaskComplete(\n        element,\n        record.id,\n        typeOfStatus.COMPLETE\n      );\n      console.log(\"D\", dependenciesComplete);\n      const currentStatus = getCurrentStatus(element, record.id);\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n          break;\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(\n            record.id,\n            element,\n            \"status\",\n            typeOfStatus.IN_PROGRESS\n          );\n          break;\n        default:\n          break;\n      }\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = ({ name, parent }) => {\n    const newTask = {\n      key: uuidv4(),\n      id: lastId + 1,\n      name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    };\n    setLastId(lastId + 1);\n    if (!parent) {\n      setData([...data, newTask]);\n    } else {\n      const dataCopy = [...data];\n      const updatedCopy = dataCopy.map((element) =>\n        addChildToTask(parent, element, newTask)\n      );\n      setData([...updatedCopy]);\n    }\n    setVisible(false);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add New Task\n      </Button>\n      <ListForm\n        visible={visible}\n        onCreate={onCreate}\n        flatTree={flatTree}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      <List\n        updateTaskList={updateTaskList}\n        data={data}\n        selectedRowKeys={selectedRowKeys}\n        setSelectedRowKeys={setSelectedRowKeys}\n      />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}