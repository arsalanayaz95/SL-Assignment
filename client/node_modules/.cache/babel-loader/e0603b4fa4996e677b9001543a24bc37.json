{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/client/src/components/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"antd\";\nimport { useState } from \"react\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport \"./List.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  _s();\n\n  let {\n    updateTaskList,\n    data,\n    selectedRowKeys,\n    setSelectedRowKeys\n  } = _ref;\n  const {\n    subListIndent,\n    pageSize,\n    paginationPosition,\n    rowSelectionType,\n    statusColors\n  } = ListAttributes;\n  const [expandedRowKeys, setExpandedRowKeys] = useState([]);\n  const columns = [{\n    title: \"Task ID\",\n    dataIndex: \"task_id\",\n    key: \"task_id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: status => {\n      if (status === typeOfStatus.IN_PROGRESS) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: statusColors.IN_PROGRESS\n          },\n          children: [\"\\u25C9 \", /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: statusColors.DEFAULT\n            },\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }, this);\n      } else if (status === typeOfStatus.DONE) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: statusColors.DONE\n          },\n          children: [\"\\u25C9 \", /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: statusColors.DEFAULT\n            },\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this);\n      } else if (status === typeOfStatus.COMPLETE) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: statusColors.COMPLETE\n          },\n          children: [\"\\u25C9 \", /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              color: statusColors.DEFAULT\n            },\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      }\n    },\n    filters: [{\n      text: typeOfStatus.IN_PROGRESS,\n      value: typeOfStatus.IN_PROGRESS\n    }, {\n      text: typeOfStatus.DONE,\n      value: typeOfStatus.DONE\n    }, {\n      text: typeOfStatus.COMPLETE,\n      value: typeOfStatus.COMPLETE\n    }],\n    onFilter: (value, record) => record.status.indexOf(value) === 0\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"components-table-demo-nested\",\n      rowSelection: {\n        selectedRowKeys,\n        type: rowSelectionType,\n        hideSelectAll: true,\n        onSelect: (record, _, selectedRows) => {\n          updateTaskList(record);\n          setSelectedRowKeys(selectedRows.map(row => row.key));\n          setExpandedRowKeys(record.key);\n        }\n      },\n      expandable: {\n        expandedRowKeys\n      },\n      columns: columns,\n      indentSize: subListIndent,\n      dataSource: [...data],\n      pagination: {\n        pageSize: pageSize,\n        position: paginationPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"RwYafV3b29ZFYUhaQhRI05No/XM=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Table","useState","ListAttributes","typeOfStatus","List","updateTaskList","data","selectedRowKeys","setSelectedRowKeys","subListIndent","pageSize","paginationPosition","rowSelectionType","statusColors","expandedRowKeys","setExpandedRowKeys","columns","title","dataIndex","key","render","status","IN_PROGRESS","color","DEFAULT","DONE","COMPLETE","filters","text","value","onFilter","record","indexOf","type","hideSelectAll","onSelect","_","selectedRows","map","row","position"],"sources":["/Users/aayaz/Desktop/Code/streamline/client/src/components/List/List.jsx"],"sourcesContent":["import { Table } from \"antd\";\nimport { useState } from \"react\";\nimport { ListAttributes} from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport \"./List.css\";\n\nexport default function List({\n  updateTaskList,\n  data,\n  selectedRowKeys,\n  setSelectedRowKeys,\n}) {\n  const {subListIndent, pageSize, paginationPosition, rowSelectionType, statusColors}  = ListAttributes;\n  const [expandedRowKeys, setExpandedRowKeys] = useState([]);\n  const columns = [\n    { title: \"Task ID\", dataIndex: \"task_id\", key: \"task_id\" },\n    { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        if(status === typeOfStatus.IN_PROGRESS) {\n          return (<span style={{color: statusColors.IN_PROGRESS}}>&#9673; <b style={{color: statusColors.DEFAULT}}>{status}</b></span>)\n        } else if(status === typeOfStatus.DONE){\n          return <span style={{color: statusColors.DONE}}>&#9673; <b style={{color: statusColors.DEFAULT}}>{status}</b></span>\n        }else if(status === typeOfStatus.COMPLETE){\n          return <span style={{color: statusColors.COMPLETE}}>&#9673; <b style={{color: statusColors.DEFAULT}}>{status}</b></span>\n        }\n      },\n      filters: [\n        {\n          text: typeOfStatus.IN_PROGRESS,\n          value: typeOfStatus.IN_PROGRESS,\n        },\n        {\n          text: typeOfStatus.DONE,\n          value: typeOfStatus.DONE,\n        },\n        {\n          text: typeOfStatus.COMPLETE,\n          value: typeOfStatus.COMPLETE,\n        },\n      ],\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n    },\n  ];\n  \n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        rowSelection={{\n          selectedRowKeys,\n          type: rowSelectionType,\n          hideSelectAll: true,\n          onSelect: (record, _, selectedRows) => {\n            updateTaskList(record);\n            setSelectedRowKeys(selectedRows.map((row) => row.key));\n            setExpandedRowKeys(record.key)\n          },\n        }}\n        expandable={{\n         expandedRowKeys\n        }}\n        columns={columns}\n        indentSize={subListIndent}\n        dataSource={[...data]}\n        pagination={{\n          pageSize: pageSize,\n          position: paginationPosition,\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}