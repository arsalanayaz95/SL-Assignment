{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx\";\nimport { Table, Dropdown } from \"antd\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  let {\n    updateTaskList,\n    data\n  } = _ref;\n  //     const expandedRowRender = () => {\n  //     const nested_columns = [\n  //       { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n  //       { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n  //       { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n  //       { title: \"Status\", dataIndex: \"status\", key: \"status\" },\n  //       {\n  //         title: \"Action\",\n  //         dataIndex: \"operation\",\n  //         key: \"operation\",\n  //         render: () => (\n  //           <span className=\"table-operation\">\n  //             <Dropdown>\n  //               <span>Edit | Delete</span>\n  //             </Dropdown>\n  //           </span>\n  //         ),\n  //       },\n  //     ];\n  //     return (\n  //       <Table\n  //         rowSelection={{\n  //           type: ListAttributes.rowSelectionType,\n  //           hideSelectAll: true,\n  //           onSelect: (record) => {\n  //             updateTaskList(record.id);\n  //           },\n  //         }}\n  //         expandable={{\n  //       expandedRowRender: expandedRowRender2,\n  //     }}\n  //         columns={nested_columns}\n  //         dataSource={[...data]}\n  //         pagination={false}\n  //       />\n  //     );\n  //   };\n  const columns = [{\n    title: \"Task ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    filters: [{\n      text: typeOfStatus.IN_PROGRESS,\n      value: typeOfStatus.IN_PROGRESS\n    }, {\n      text: typeOfStatus.DONE,\n      value: typeOfStatus.DONE\n    }, {\n      text: typeOfStatus.COMPLETE,\n      value: typeOfStatus.COMPLETE\n    }],\n    onFilter: (value, record) => record.status.indexOf(value) === 0\n  }, {\n    title: \"Action\",\n    dataIndex: \"operation\",\n    key: \"operation\",\n    render: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"EDIT | DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"components-table-demo-nested\",\n      rowSelection: {\n        type: ListAttributes.rowSelectionType,\n        hideSelectAll: true,\n        onSelect: record => {\n          updateTaskList(record.id);\n        }\n      },\n      columns: columns // expandable={{ expandedRowRender }}\n      ,\n      dataSource: [...data],\n      pagination: {\n        pageSize: ListAttributes.pageSize,\n        position: ListAttributes.paginationPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Table","Dropdown","ListAttributes","typeOfStatus","List","updateTaskList","data","columns","title","dataIndex","key","filters","text","IN_PROGRESS","value","DONE","COMPLETE","onFilter","record","status","indexOf","render","type","rowSelectionType","hideSelectAll","onSelect","id","pageSize","position","paginationPosition"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx"],"sourcesContent":["import { Table, Dropdown } from \"antd\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\n\nexport default function List({ updateTaskList, data }) {\n//     const expandedRowRender = () => {\n//     const nested_columns = [\n//       { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n//       { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n//       { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n//       { title: \"Status\", dataIndex: \"status\", key: \"status\" },\n//       {\n//         title: \"Action\",\n//         dataIndex: \"operation\",\n//         key: \"operation\",\n//         render: () => (\n//           <span className=\"table-operation\">\n//             <Dropdown>\n//               <span>Edit | Delete</span>\n//             </Dropdown>\n//           </span>\n//         ),\n//       },\n//     ];\n//     return (\n//       <Table\n//         rowSelection={{\n//           type: ListAttributes.rowSelectionType,\n//           hideSelectAll: true,\n//           onSelect: (record) => {\n//             updateTaskList(record.id);\n//           },\n//         }}\n//         expandable={{\n//       expandedRowRender: expandedRowRender2,\n//     }}\n//         columns={nested_columns}\n//         dataSource={[...data]}\n//         pagination={false}\n//       />\n//     );\n//   };\n\n  const columns = [\n    { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n    { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n    { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filters: [\n        {\n          text: typeOfStatus.IN_PROGRESS,\n          value: typeOfStatus.IN_PROGRESS,\n        },\n        {\n          text: typeOfStatus.DONE,\n          value: typeOfStatus.DONE,\n        },\n        {\n          text: typeOfStatus.COMPLETE,\n          value: typeOfStatus.COMPLETE,\n        },\n      ],\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"operation\",\n      key: \"operation\",\n      render: () => (\n        <span>EDIT | DELETE</span>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        rowSelection={{\n          type:  ListAttributes.rowSelectionType,\n          hideSelectAll: true,\n          onSelect: (record) => {\n            updateTaskList(record.id);\n          },\n        }}\n        columns={columns}\n        // expandable={{ expandedRowRender }}\n        dataSource={[...data]}\n        pagination={{ pageSize:  ListAttributes.pageSize, position: ListAttributes.paginationPosition }}\n      />\n    </div>\n  );\n}\n"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,MAAhC;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAEA,eAAe,SAASC,IAAT,OAAwC;EAAA,IAA1B;IAAEC,cAAF;IAAkBC;EAAlB,CAA0B;EACvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,SAAT;IAAoBC,SAAS,EAAE,IAA/B;IAAqCC,GAAG,EAAE;EAA1C,CADc,EAEd;IAAEF,KAAK,EAAE,MAAT;IAAiBC,SAAS,EAAE,MAA5B;IAAoCC,GAAG,EAAE;EAAzC,CAFc,EAGd;IAAEF,KAAK,EAAE,aAAT;IAAwBC,SAAS,EAAE,aAAnC;IAAkDC,GAAG,EAAE;EAAvD,CAHc,EAId;IACEF,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGEC,GAAG,EAAE,QAHP;IAIEC,OAAO,EAAE,CACP;MACEC,IAAI,EAAET,YAAY,CAACU,WADrB;MAEEC,KAAK,EAAEX,YAAY,CAACU;IAFtB,CADO,EAKP;MACED,IAAI,EAAET,YAAY,CAACY,IADrB;MAEED,KAAK,EAAEX,YAAY,CAACY;IAFtB,CALO,EASP;MACEH,IAAI,EAAET,YAAY,CAACa,QADrB;MAEEF,KAAK,EAAEX,YAAY,CAACa;IAFtB,CATO,CAJX;IAkBEC,QAAQ,EAAE,CAACH,KAAD,EAAQI,MAAR,KAAmBA,MAAM,CAACC,MAAP,CAAcC,OAAd,CAAsBN,KAAtB,MAAiC;EAlBhE,CAJc,EAwBd;IACEN,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,WAFb;IAGEC,GAAG,EAAE,WAHP;IAIEW,MAAM,EAAE,mBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EALJ,CAxBc,CAAhB;EAiCA,oBACE;IAAA,uBACE,QAAC,KAAD;MACE,SAAS,EAAC,8BADZ;MAEE,YAAY,EAAE;QACZC,IAAI,EAAGpB,cAAc,CAACqB,gBADV;QAEZC,aAAa,EAAE,IAFH;QAGZC,QAAQ,EAAGP,MAAD,IAAY;UACpBb,cAAc,CAACa,MAAM,CAACQ,EAAR,CAAd;QACD;MALW,CAFhB;MASE,OAAO,EAAEnB,OATX,CAUE;MAVF;MAWE,UAAU,EAAE,CAAC,GAAGD,IAAJ,CAXd;MAYE,UAAU,EAAE;QAAEqB,QAAQ,EAAGzB,cAAc,CAACyB,QAA5B;QAAsCC,QAAQ,EAAE1B,cAAc,CAAC2B;MAA/D;IAZd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;KA1FuBzB,I"},"metadata":{},"sourceType":"module"}