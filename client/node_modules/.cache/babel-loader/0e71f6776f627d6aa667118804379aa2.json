{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([{\n    key: uuidv4(),\n    id: 1,\n    name: \"Start the task\",\n    description: \"Start Working On This Task Thingy\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }, {\n    key: uuidv4(),\n    id: 2,\n    name: \"Implement Circular Dependency Check\",\n    description: \"While adding a new task and selecting parentId, check for dependency loop\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }, {\n    key: uuidv4(),\n    id: 3,\n    name: \"Add A New Task\",\n    description: \"Develop a popup form to add a new task to the list\",\n    status: typeOfStatus.DONE,\n    parentId: 2,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }, {\n    key: uuidv4(),\n    id: 4,\n    name: \"Edit Task Functionality\",\n    description: \"Edit a task in-line and then save or cancel\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 3,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }]); // useEffect(() => {\n  //   const dataCopy = [...data];\n  //   dataCopy.forEach((record) => {\n  //     const selectedTaskIndex = data.findIndex(\n  //       (_data) => _data.id === record.id\n  //     );\n  //     const dependencies = dataCopy.filter(\n  //       (_data) => _data.parentId === record.id\n  //     ).length;\n  //     dataCopy[selectedTaskIndex].total_dependencies = dependencies;\n  //   });\n  //   setData([...dataCopy]);\n  //   // const dependenciesComplete = dataCopy.filter(\n  //   //   (_data) =>\n  //   //     _data.status === typeOfStatus.COMPLETE && _data.parentId === record.id\n  //   // ).length;\n  // }, []);\n\n  const updateTaskList = record => {\n    const selectedTaskIndex = data.findIndex(_data => _data.id === record.id);\n    const updatedData = getUpdatedData(record, selectedTaskIndex);\n    updatedData[selectedTaskIndex].key = uuidv4();\n    setData([...updatedData]);\n  };\n\n  const getUpdatedData = (record, selectedTaskIndex) => {\n    const dataCopy = [...data];\n    const dependencies = dataCopy.filter(_data => _data.parentId === record.id).length;\n    const dependenciesComplete = dataCopy.filter(_data => _data.status === typeOfStatus.COMPLETE && _data.parentId === record.id).length;\n\n    if (dataCopy[selectedTaskIndex].status === typeOfStatus.IN_PROGRESS) {\n      //PERFORM ACTION ON PARENTS\n      if (dependencies === 0 || dependenciesComplete === dependencies) {\n        dataCopy[selectedTaskIndex].status = typeOfStatus.COMPLETE;\n      } else {\n        dataCopy[selectedTaskIndex].status = typeOfStatus.DONE;\n      }\n    } else if (dataCopy[selectedTaskIndex].status === typeOfStatus.COMPLETE) {\n      dataCopy[selectedTaskIndex].status = typeOfStatus.IN_PROGRESS;\n    } else if (dataCopy[selectedTaskIndex].status === typeOfStatus.DONE) {\n      //PERFORM ACTION ON PARENTS\n      dataCopy[selectedTaskIndex].status = typeOfStatus.IN_PROGRESS;\n    }\n\n    return dataCopy;\n  };\n\n  const onCreate = _ref => {\n    let {\n      name,\n      parent\n    } = _ref;\n    const newTask = {\n      key: uuidv4(),\n      id: data.length + 1,\n      name,\n      description: name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    };\n    setData([...data, newTask]);\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n      visible: visible,\n      onCreate: onCreate,\n      onCancel: () => {\n        setVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      updateTaskList: updateTaskList,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JTcvJPsA6GPTrTidGIpW1GmIpPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Button","v4","uuidv4","typeOfStatus","List","ListForm","App","visible","setVisible","data","setData","key","id","name","description","status","IN_PROGRESS","parentId","total_dependencies","dependencies_done","dependencies_complete","DONE","updateTaskList","record","selectedTaskIndex","findIndex","_data","updatedData","getUpdatedData","dataCopy","dependencies","filter","length","dependenciesComplete","COMPLETE","onCreate","parent","newTask"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([\n    {\n      key: uuidv4(),\n      id: 1,\n      name: \"Start the task\",\n      description: \"Start Working On This Task Thingy\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n    {\n      key: uuidv4(),\n      id: 2,\n      name: \"Implement Circular Dependency Check\",\n      description:\n        \"While adding a new task and selecting parentId, check for dependency loop\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n    {\n      key: uuidv4(),\n      id: 3,\n      name: \"Add A New Task\",\n      description: \"Develop a popup form to add a new task to the list\",\n      status: typeOfStatus.DONE,\n      parentId: 2,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n    {\n      key: uuidv4(),\n      id: 4,\n      name: \"Edit Task Functionality\",\n      description: \"Edit a task in-line and then save or cancel\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 3,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n  ]);\n\n  // useEffect(() => {\n  //   const dataCopy = [...data];\n  //   dataCopy.forEach((record) => {\n  //     const selectedTaskIndex = data.findIndex(\n  //       (_data) => _data.id === record.id\n  //     );\n  //     const dependencies = dataCopy.filter(\n  //       (_data) => _data.parentId === record.id\n  //     ).length;\n  //     dataCopy[selectedTaskIndex].total_dependencies = dependencies;\n  //   });\n  //   setData([...dataCopy]);\n  //   // const dependenciesComplete = dataCopy.filter(\n  //   //   (_data) =>\n  //   //     _data.status === typeOfStatus.COMPLETE && _data.parentId === record.id\n  //   // ).length;\n  // }, []);\n\n  const updateTaskList = (record) => {\n    const selectedTaskIndex = data.findIndex((_data) => _data.id === record.id);\n    const updatedData = getUpdatedData(record, selectedTaskIndex);\n    updatedData[selectedTaskIndex].key = uuidv4();\n    setData([...updatedData]);\n  };\n\n  const getUpdatedData = (record, selectedTaskIndex) => {\n    const dataCopy = [...data];\n    const dependencies = dataCopy.filter(\n      (_data) => _data.parentId === record.id\n    ).length;\n    const dependenciesComplete = dataCopy.filter(\n      (_data) =>\n        _data.status === typeOfStatus.COMPLETE && _data.parentId === record.id\n    ).length;\n    if (dataCopy[selectedTaskIndex].status === typeOfStatus.IN_PROGRESS) {\n      //PERFORM ACTION ON PARENTS\n      if (dependencies === 0 || dependenciesComplete === dependencies) {\n        dataCopy[selectedTaskIndex].status = typeOfStatus.COMPLETE;\n      } else {\n        dataCopy[selectedTaskIndex].status = typeOfStatus.DONE;\n      }\n    } else if (dataCopy[selectedTaskIndex].status === typeOfStatus.COMPLETE) {\n      dataCopy[selectedTaskIndex].status = typeOfStatus.IN_PROGRESS;\n    } else if (dataCopy[selectedTaskIndex].status === typeOfStatus.DONE) {\n      //PERFORM ACTION ON PARENTS\n      dataCopy[selectedTaskIndex].status = typeOfStatus.IN_PROGRESS;\n    }\n    return dataCopy;\n  };\n\n  const onCreate = ({ name, parent }) => {\n    const newTask = {\n      key: uuidv4(),\n      id: data.length + 1,\n      name,\n      description: name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    };\n    setData([...data, newTask]);\n    setVisible(false);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add New Task\n      </Button>\n      <ListForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      <List updateTaskList={updateTaskList} data={data} />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}