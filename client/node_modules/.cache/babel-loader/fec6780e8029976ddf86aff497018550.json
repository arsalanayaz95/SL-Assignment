{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { addChildToTask, getCurrentStatus, setDependencies, updateParent, updateTaskById } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [lastId, setLastId] = useState(5); // const [data, setData] = useState([]);\n\n  const [data, setData] = useState([{\n    key: uuidv4(),\n    id: 1,\n    name: \"Start the task\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    children: [{\n      key: uuidv4(),\n      id: 5,\n      name: \"Start the task\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 1,\n      children: null\n    }]\n  }, {\n    key: uuidv4(),\n    id: 2,\n    name: \"Implement Circular Dependency Check\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    children: [{\n      key: uuidv4(),\n      id: 3,\n      name: \"Add A New Task\",\n      status: typeOfStatus.DONE,\n      parentId: 2,\n      children: null\n    }, {\n      key: uuidv4(),\n      id: 4,\n      name: \"Edit Task Functionality\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 2,\n      children: null\n    }]\n  }]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  let flat = new Set();\n  let checks = new Set();\n  useEffect(() => {\n    if (data.length > 0) {\n      const keys = data.map(element => getCheckedTask(element))[0];\n      const tree = data.map(element => flatten(element))[0];\n      setFlatTree(Array.from(tree));\n      setSelectedRowKeys(Array.from(keys));\n    } // eslint-disable-next-line\n\n  }, [data]);\n\n  function flatten(element) {\n    flat.add({\n      name: element.name,\n      id: element.id,\n      parentId: element.parentId\n    });\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        flatten(element.children[i]);\n      }\n    }\n\n    return flat;\n  }\n\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE || element.status === typeOfStatus.COMPLETE) {\n      checks.add(element.key);\n    }\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n\n    return checks;\n  }\n\n  let countDependency = 0;\n  let countCompletedDependency = 0;\n\n  function searchTaskList(element, matchingId) {\n    if (element.parentId === matchingId && element.status === typeOfStatus.COMPLETE) {\n      countCompletedDependency++;\n      countDependency++;\n    } else if (element.parentId === matchingId) {\n      countDependency++;\n    } else if (element.children !== null) {\n      let result = null;\n\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId);\n      }\n    }\n\n    return null;\n  }\n\n  const updateTaskList = record => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map(element => {\n      countDependency = 0;\n      countCompletedDependency = 0;\n      searchTaskList(element, record.id);\n      const currentStatus = getCurrentStatus(element, record.id);\n\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (countDependency === 0 || countCompletedDependency === countDependency) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n            updateParent(record.parentId, element, typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n\n          break;\n\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          if (record.children === null) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.IN_PROGRESS);\n          }\n\n          updateParent(record.parentId, element, typeOfStatus.DONE);\n          break;\n\n        default:\n          break;\n      }\n\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = _ref => {\n    let {\n      name,\n      parent\n    } = _ref;\n    const newTask = {\n      key: uuidv4(),\n      id: lastId + 1,\n      name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    };\n    setLastId(lastId + 1);\n\n    if (!parent) {\n      setData([...data, newTask]);\n    } else {\n      const dataCopy = [...data];\n      const updatedCopy = dataCopy.map(element => addChildToTask(parent, element, newTask));\n      setData([...updatedCopy]);\n    }\n\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n      visible: visible,\n      onCreate: onCreate,\n      flatTree: flatTree,\n      onCancel: () => {\n        setVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      updateTaskList: updateTaskList,\n      data: data,\n      selectedRowKeys: selectedRowKeys,\n      setSelectedRowKeys: setSelectedRowKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tIkSlOSDL+pWjqat5f1j1WS3C/8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","v4","uuidv4","typeOfStatus","List","ListForm","addChildToTask","getCurrentStatus","setDependencies","updateParent","updateTaskById","App","visible","setVisible","lastId","setLastId","data","setData","key","id","name","status","IN_PROGRESS","parentId","children","DONE","selectedRowKeys","setSelectedRowKeys","flatTree","setFlatTree","flat","Set","checks","length","keys","map","element","getCheckedTask","tree","flatten","Array","from","add","i","COMPLETE","countDependency","countCompletedDependency","searchTaskList","matchingId","result","updateTaskList","record","dataCopy","updatedCopy","currentStatus","onCreate","parent","newTask","total_dependencies","dependencies_done","dependencies_complete"],"sources":["/Users/aayaz/Desktop/Code/streamline/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport {\n  addChildToTask,\n  getCurrentStatus,\n  setDependencies,\n  updateParent,\n  updateTaskById,\n} from \"./utils/helpers\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const [lastId, setLastId] = useState(5);\n  // const [data, setData] = useState([]);\n  const [data, setData] = useState([\n    {\n      key: uuidv4(),\n      id: 1,\n      name: \"Start the task\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      children: [\n        {\n          key: uuidv4(),\n          id: 5,\n          name: \"Start the task\",\n          status: typeOfStatus.IN_PROGRESS,\n          parentId: 1,\n          children: null,\n        },\n      ],\n    },\n    {\n      key: uuidv4(),\n      id: 2,\n      name: \"Implement Circular Dependency Check\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      children: [\n        {\n          key: uuidv4(),\n          id: 3,\n          name: \"Add A New Task\",\n          status: typeOfStatus.DONE,\n          parentId: 2,\n          children: null,\n        },\n        {\n          key: uuidv4(),\n          id: 4,\n          name: \"Edit Task Functionality\",\n          status: typeOfStatus.IN_PROGRESS,\n          parentId: 2,\n          children: null,\n        },\n      ],\n    },\n  ]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [flatTree, setFlatTree] = useState([]);\n  let flat = new Set();\n  let checks = new Set();\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const keys = data.map((element) => getCheckedTask(element))[0];\n      const tree = data.map((element) => flatten(element))[0];\n      setFlatTree(Array.from(tree));\n      setSelectedRowKeys(Array.from(keys));\n    }\n    // eslint-disable-next-line\n  }, [data]);\n\n  function flatten(element) {\n    flat.add({\n      name: element.name,\n      id: element.id,\n      parentId: element.parentId,\n    });\n\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        flatten(element.children[i]);\n      }\n    }\n    return flat;\n  }\n\n  function getCheckedTask(element) {\n    if (\n      element.status === typeOfStatus.DONE ||\n      element.status === typeOfStatus.COMPLETE\n    ) {\n      checks.add(element.key);\n    }\n    if (element.children !== null) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n    return checks;\n  }\n\n  let countDependency = 0;\n  let countCompletedDependency = 0;\n  function searchTaskList(element, matchingId) {\n    if (\n      element.parentId === matchingId &&\n      element.status === typeOfStatus.COMPLETE\n    ) {\n      countCompletedDependency++;\n      countDependency++;\n    } else if (element.parentId === matchingId) {\n      countDependency++;\n    } else if (element.children !== null) {\n      let result = null;\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId);\n      }\n    }\n    return null;\n  }\n\n  const updateTaskList = (record) => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map((element) => {\n      countDependency = 0;\n      countCompletedDependency = 0;\n      searchTaskList(element, record.id);\n      const currentStatus = getCurrentStatus(element, record.id);\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (\n            countDependency === 0 ||\n            countCompletedDependency === countDependency\n          ) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n            updateParent(record.parentId, element, typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n          break;\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          if (record.children === null) {\n            updateTaskById(\n              record.id,\n              element,\n              \"status\",\n              typeOfStatus.IN_PROGRESS\n            );\n          }\n          updateParent(record.parentId, element, typeOfStatus.DONE);\n          break;\n        default:\n          break;\n      }\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = ({ name, parent }) => {\n    const newTask = {\n      key: uuidv4(),\n      id: lastId + 1,\n      name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      children: null,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    };\n    setLastId(lastId + 1);\n    if (!parent) {\n      setData([...data, newTask]);\n    } else {\n      const dataCopy = [...data];\n      const updatedCopy = dataCopy.map((element) =>\n        addChildToTask(parent, element, newTask)\n      );\n      setData([...updatedCopy]);\n    }\n    setVisible(false);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add New Task\n      </Button>\n      <ListForm\n        visible={visible}\n        onCreate={onCreate}\n        flatTree={flatTree}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      <List\n        updateTaskList={updateTaskList}\n        data={data}\n        selectedRowKeys={selectedRowKeys}\n        setSelectedRowKeys={setSelectedRowKeys}\n      />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}