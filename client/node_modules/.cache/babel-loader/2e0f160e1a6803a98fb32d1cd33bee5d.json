{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"antd\";\nimport { useState } from \"react\";\nimport NestedList from \"../NestedList/NestedList\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport \"./List.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  _s();\n\n  let {\n    updateTaskList,\n    data\n  } = _ref;\n  const [selectedRowKeys, setSelectedRowKeys] = useState(data === null || data === void 0 ? void 0 : data.filter(value => value.status === typeOfStatus.DONE).map(item => item.key));\n  const columns = [{\n    title: \"Task ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    filters: [{\n      text: typeOfStatus.IN_PROGRESS,\n      value: typeOfStatus.IN_PROGRESS\n    }, {\n      text: typeOfStatus.DONE,\n      value: typeOfStatus.DONE\n    }, {\n      text: typeOfStatus.COMPLETE,\n      value: typeOfStatus.COMPLETE\n    }],\n    onFilter: (value, record) => record.status.indexOf(value) === 0\n  }, {\n    title: \"Total Dependencies\",\n    dataIndex: \"total_dependencies\",\n    key: \"total_dependencies\"\n  }, {\n    title: \"Dependencies Done\",\n    dataIndex: \"dependencies_done\",\n    key: \"dependencies_done\"\n  }, {\n    title: \"Dependencies Complete\",\n    dataIndex: \"dependencies_complete\",\n    key: \"dependencies_complete\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"operation\",\n    key: \"operation\",\n    render: () => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"EDIT | DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: \"components-table-demo-nested\",\n      rowSelection: {\n        selectedRowKeys,\n        type: ListAttributes.rowSelectionType,\n        hideSelectAll: true,\n        onSelect: (record, _, selectedRows) => {\n          updateTaskList(record);\n          setSelectedRowKeys(selectedRows.map(row => row.key));\n        }\n      },\n      columns: columns,\n      expandable: NestedList,\n      dataSource: [...data],\n      pagination: {\n        pageSize: ListAttributes.pageSize,\n        position: ListAttributes.paginationPosition\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"GlaQqOfzdCfNxXr9BHkAQrrWQl4=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Table","useState","NestedList","ListAttributes","typeOfStatus","List","updateTaskList","data","selectedRowKeys","setSelectedRowKeys","filter","value","status","DONE","map","item","key","columns","title","dataIndex","filters","text","IN_PROGRESS","COMPLETE","onFilter","record","indexOf","render","type","rowSelectionType","hideSelectAll","onSelect","_","selectedRows","row","pageSize","position","paginationPosition"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/components/List/List.jsx"],"sourcesContent":["import { Table } from \"antd\";\nimport { useState } from \"react\";\nimport  NestedList  from \"../NestedList/NestedList\";\nimport { ListAttributes } from \"../../constant/listAttributes\";\nimport { typeOfStatus } from \"../../constant/status\";\nimport \"./List.css\";\n\nexport default function List({ updateTaskList, data }) {\nconst [selectedRowKeys, setSelectedRowKeys] = useState(data?.filter(value => value.status === typeOfStatus.DONE).map(item => item.key));\n  const columns = [\n    { title: \"Task ID\", dataIndex: \"id\", key: \"id\" },\n    { title: \"Name\", dataIndex: \"name\", key: \"name\" },\n    { title: \"Description\", dataIndex: \"description\", key: \"description\" },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filters: [\n        {\n          text: typeOfStatus.IN_PROGRESS,\n          value: typeOfStatus.IN_PROGRESS,\n        },\n        {\n          text: typeOfStatus.DONE,\n          value: typeOfStatus.DONE,\n        },\n        {\n          text: typeOfStatus.COMPLETE,\n          value: typeOfStatus.COMPLETE,\n        },\n      ],\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n    },\n    { title: \"Total Dependencies\", dataIndex: \"total_dependencies\", key: \"total_dependencies\" },\n    { title: \"Dependencies Done\", dataIndex: \"dependencies_done\", key: \"dependencies_done\" },\n    { title: \"Dependencies Complete\", dataIndex: \"dependencies_complete\", key: \"dependencies_complete\" },\n    {\n      title: \"Action\",\n      dataIndex: \"operation\",\n      key: \"operation\",\n      render: () => (\n        <span>EDIT | DELETE</span>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        rowSelection={{\n          selectedRowKeys,\n          type:  ListAttributes.rowSelectionType,\n          hideSelectAll: true,\n          onSelect: (record, _, selectedRows) => {\n            updateTaskList(record);\n            setSelectedRowKeys(selectedRows.map(row => row.key));\n          }\n        }}\n        columns={columns}\n        expandable={ NestedList }\n        dataSource={[...data]}\n        pagination={{ pageSize:  ListAttributes.pageSize, position: ListAttributes.paginationPosition }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAQC,UAAR,MAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,IAAT,OAAwC;EAAA;;EAAA,IAA1B;IAAEC,cAAF;IAAkBC;EAAlB,CAA0B;EACvD,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAACM,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiBR,YAAY,CAACS,IAApD,EAA0DC,GAA1D,CAA8DC,IAAI,IAAIA,IAAI,CAACC,GAA3E,CAAD,CAAtD;EACE,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,SAAT;IAAoBC,SAAS,EAAE,IAA/B;IAAqCH,GAAG,EAAE;EAA1C,CADc,EAEd;IAAEE,KAAK,EAAE,MAAT;IAAiBC,SAAS,EAAE,MAA5B;IAAoCH,GAAG,EAAE;EAAzC,CAFc,EAGd;IAAEE,KAAK,EAAE,aAAT;IAAwBC,SAAS,EAAE,aAAnC;IAAkDH,GAAG,EAAE;EAAvD,CAHc,EAId;IACEE,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,QAFb;IAGEH,GAAG,EAAE,QAHP;IAIEI,OAAO,EAAE,CACP;MACEC,IAAI,EAAEjB,YAAY,CAACkB,WADrB;MAEEX,KAAK,EAAEP,YAAY,CAACkB;IAFtB,CADO,EAKP;MACED,IAAI,EAAEjB,YAAY,CAACS,IADrB;MAEEF,KAAK,EAAEP,YAAY,CAACS;IAFtB,CALO,EASP;MACEQ,IAAI,EAAEjB,YAAY,CAACmB,QADrB;MAEEZ,KAAK,EAAEP,YAAY,CAACmB;IAFtB,CATO,CAJX;IAkBEC,QAAQ,EAAE,CAACb,KAAD,EAAQc,MAAR,KAAmBA,MAAM,CAACb,MAAP,CAAcc,OAAd,CAAsBf,KAAtB,MAAiC;EAlBhE,CAJc,EAwBd;IAAEO,KAAK,EAAE,oBAAT;IAA+BC,SAAS,EAAE,oBAA1C;IAAgEH,GAAG,EAAE;EAArE,CAxBc,EAyBd;IAAEE,KAAK,EAAE,mBAAT;IAA8BC,SAAS,EAAE,mBAAzC;IAA8DH,GAAG,EAAE;EAAnE,CAzBc,EA0Bd;IAAEE,KAAK,EAAE,uBAAT;IAAkCC,SAAS,EAAE,uBAA7C;IAAsEH,GAAG,EAAE;EAA3E,CA1Bc,EA2Bd;IACEE,KAAK,EAAE,QADT;IAEEC,SAAS,EAAE,WAFb;IAGEH,GAAG,EAAE,WAHP;IAIEW,MAAM,EAAE,mBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EALJ,CA3Bc,CAAhB;EAoCA,oBACE;IAAA,uBACE,QAAC,KAAD;MACE,SAAS,EAAC,8BADZ;MAEE,YAAY,EAAE;QACZnB,eADY;QAEZoB,IAAI,EAAGzB,cAAc,CAAC0B,gBAFV;QAGZC,aAAa,EAAE,IAHH;QAIZC,QAAQ,EAAE,CAACN,MAAD,EAASO,CAAT,EAAYC,YAAZ,KAA6B;UACrC3B,cAAc,CAACmB,MAAD,CAAd;UACAhB,kBAAkB,CAACwB,YAAY,CAACnB,GAAb,CAAiBoB,GAAG,IAAIA,GAAG,CAAClB,GAA5B,CAAD,CAAlB;QACD;MAPW,CAFhB;MAWE,OAAO,EAAEC,OAXX;MAYE,UAAU,EAAGf,UAZf;MAaE,UAAU,EAAE,CAAC,GAAGK,IAAJ,CAbd;MAcE,UAAU,EAAE;QAAE4B,QAAQ,EAAGhC,cAAc,CAACgC,QAA5B;QAAsCC,QAAQ,EAAEjC,cAAc,CAACkC;MAA/D;IAdd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA1DuBhC,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}