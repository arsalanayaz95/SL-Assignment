{"ast":null,"code":"var _jsxFileName = \"/Users/aayaz/Desktop/Code/streamline/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { getCurrentStatus, updateTaskById } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([{\n    key: uuidv4(),\n    id: 1,\n    name: \"Start the task\",\n    description: \"Start Working On This Task Thingy\",\n    status: typeOfStatus.DONE,\n    parentId: 0,\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }, {\n    key: uuidv4(),\n    id: 2,\n    name: \"Implement Circular Dependency Check\",\n    description: \"While adding a new task and selecting parentId, check for dependency loop\",\n    status: typeOfStatus.IN_PROGRESS,\n    parentId: 0,\n    children: [{\n      key: uuidv4(),\n      id: 3,\n      name: \"Add A New Task\",\n      description: \"Develop a popup form to add a new task to the list\",\n      status: typeOfStatus.DONE,\n      parentId: 2,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    }, {\n      key: uuidv4(),\n      id: 4,\n      name: \"Edit Task Functionality\",\n      description: \"Edit a task in-line and then save or cancel\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 2,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    }],\n    total_dependencies: 0,\n    dependencies_done: 0,\n    dependencies_complete: 0\n  }]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  useEffect(() => {\n    const keys = data.map(element => getCheckedTask(element))[0];\n    setSelectedRowKeys(keys);\n  }, [data]);\n  let checks = [];\n\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE) {\n      checks.push(element.key);\n    }\n\n    if (element.children !== undefined) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n\n    return checks;\n  }\n\n  let count = 0;\n\n  function searchTaskList(element, matchingId) {\n    let status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== undefined) {\n      let result = null;\n\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n\n      return count;\n    }\n\n    return null;\n  }\n\n  const updateTaskList = record => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map(element => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      const dependenciesComplete = searchTaskList(element, record.id, typeOfStatus.COMPLETE);\n      const currentStatus = getCurrentStatus(element, record.id);\n\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n\n          break;\n\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(record.id, element, \"status\", typeOfStatus.IN_PROGRESS);\n          break;\n\n        default:\n          break;\n      }\n\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = _ref => {\n    let {\n      name,\n      parent\n    } = _ref;\n    const newTask = {\n      key: uuidv4(),\n      id: data.length + 1,\n      name,\n      description: name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0\n    };\n    setData([...data, newTask]);\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListForm, {\n      visible: visible,\n      onCreate: onCreate,\n      onCancel: () => {\n        setVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      updateTaskList: updateTaskList,\n      data: data,\n      selectedRowKeys: selectedRowKeys,\n      setSelectedRowKeys: setSelectedRowKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HKgQyltwhwtyrLmGL5kAW3seUKU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Button","v4","uuidv4","typeOfStatus","List","ListForm","getCurrentStatus","updateTaskById","App","visible","setVisible","data","setData","key","id","name","description","status","DONE","parentId","total_dependencies","dependencies_done","dependencies_complete","IN_PROGRESS","children","selectedRowKeys","setSelectedRowKeys","keys","map","element","getCheckedTask","checks","push","undefined","i","length","count","searchTaskList","matchingId","result","updateTaskList","record","dataCopy","updatedCopy","dependencies","dependenciesComplete","COMPLETE","currentStatus","onCreate","parent","newTask"],"sources":["/Users/aayaz/Desktop/Code/streamline/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport \"antd/dist/antd.min.css\";\nimport { typeOfStatus } from \"./constant/status\";\nimport List from \"./components/List/List\";\nimport ListForm from \"./components/ListForm/ListForm\";\nimport { getCurrentStatus, updateTaskById } from \"./utils/helpers\";\n\nfunction App() {\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([\n    {\n      key: uuidv4(),\n      id: 1,\n      name: \"Start the task\",\n      description: \"Start Working On This Task Thingy\",\n      status: typeOfStatus.DONE,\n      parentId: 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n    {\n      key: uuidv4(),\n      id: 2,\n      name: \"Implement Circular Dependency Check\",\n      description:\n        \"While adding a new task and selecting parentId, check for dependency loop\",\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: 0,\n      children: [\n        {\n          key: uuidv4(),\n          id: 3,\n          name: \"Add A New Task\",\n          description: \"Develop a popup form to add a new task to the list\",\n          status: typeOfStatus.DONE,\n          parentId: 2,\n          total_dependencies: 0,\n          dependencies_done: 0,\n          dependencies_complete: 0,\n        },\n        {\n          key: uuidv4(),\n          id: 4,\n          name: \"Edit Task Functionality\",\n          description: \"Edit a task in-line and then save or cancel\",\n          status: typeOfStatus.IN_PROGRESS,\n          parentId: 2,\n          total_dependencies: 0,\n          dependencies_done: 0,\n          dependencies_complete: 0,\n        },\n      ],\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    },\n  ]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  useEffect(() => {\n    const keys = data.map((element) => getCheckedTask(element))[0];\n    setSelectedRowKeys(keys);\n  }, [data]);\n\n  let checks = [];\n  function getCheckedTask(element) {\n    if (element.status === typeOfStatus.DONE) {\n      checks.push(element.key);\n    }\n    if (element.children !== undefined) {\n      for (let i = 0; i < element.children.length; i++) {\n        getCheckedTask(element.children[i]);\n      }\n    }\n    return checks;\n  }\n\n  let count = 0;\n  function searchTaskList(element, matchingId, status = null) {\n    if (status) {\n      if (element.parentId === matchingId && element.status === status) {\n        count++;\n      }\n    } else if (element.parentId === matchingId) {\n      count++;\n    } else if (element.children !== undefined) {\n      let result = null;\n      for (let i = 0; result === null && i < element.children.length; i++) {\n        result = searchTaskList(element.children[i], matchingId, status);\n      }\n      return count;\n    }\n    return null;\n  }\n\n  const updateTaskList = (record) => {\n    const dataCopy = [...data];\n    const updatedCopy = dataCopy.map((element) => {\n      count = 0;\n      const dependencies = searchTaskList(element, record.id);\n      const dependenciesComplete = searchTaskList(\n        element,\n        record.id,\n        typeOfStatus.COMPLETE\n      );\n      const currentStatus = getCurrentStatus(element, record.id);\n      switch (currentStatus) {\n        case typeOfStatus.IN_PROGRESS:\n          if (dependencies === 0 || dependenciesComplete === dependencies) {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.COMPLETE);\n          } else {\n            updateTaskById(record.id, element, \"status\", typeOfStatus.DONE);\n          }\n          break;\n        case typeOfStatus.COMPLETE:\n        case typeOfStatus.DONE:\n          updateTaskById(\n            record.id,\n            element,\n            \"status\",\n            typeOfStatus.IN_PROGRESS\n          );\n          break;\n\n        default:\n          break;\n      }\n      return element;\n    });\n    setData([...updatedCopy]);\n  };\n\n  const onCreate = ({ name, parent }) => {\n    const newTask = {\n      key: uuidv4(),\n      id: data.length + 1,\n      name,\n      description: name,\n      status: typeOfStatus.IN_PROGRESS,\n      parentId: parent || 0,\n      total_dependencies: 0,\n      dependencies_done: 0,\n      dependencies_complete: 0,\n    };\n    setData([...data, newTask]);\n    setVisible(false);\n  };\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setVisible(true);\n        }}\n      >\n        Add New Task\n      </Button>\n      <ListForm\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      <List\n        updateTaskList={updateTaskList}\n        data={data}\n        selectedRowKeys={selectedRowKeys}\n        setSelectedRowKeys={setSelectedRowKeys}\n      />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}